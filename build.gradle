buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
    }
}
// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
  	compile 'org.hibernate:hibernate-core:5.1.0.Final'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.apache.tomcat.embed:tomcat-embed-jasper'
	compile 'javax.servlet:jstl'	
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.13'
	compile group: 'commons-io', name: 'commons-io', version: '2.4'
	compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'
	
	

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework:spring-test:4.2.6.RELEASE'
    testCompile 'junit:junit:4.12'
    
    
}
